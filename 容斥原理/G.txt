#include <iostream>
#include <algorithm>
#include <string>
#include <set>
//#include <map>
#include <queue>
#include <vector>
#include <cstdio>
#include <cstdlib>
#include <cstring>
#include <cmath>
//#include <ctype.h>
using namespace std;
#define M 10005
#define LL long long

int p[1300];
LL ans, C4[M];
bool vis[M];
int n, k;

LL C (int n, int m)
{
	LL res = 1;
	int i;
	for (i = 0; i < m; i++)
		res *= n - i;
	for (i = 2; i <= m; i++)
		res /= i;
	//cout << n << "---" << m << endl;
	return res;
}

void dfs (int pos, int step, int fac, int a[], int m)
{
	if (step & 1) ans += C4[m];
	else ans -= C4[m];
	int i, j, cnt, b[M];
	for (i = pos; i < k; i++)
	{
		int mul = fac*p[i];
		if (mul > a[m-1]) break;
		cnt = 0;
		for (j = 0; j < m; j++)
			if (a[j] % mul == 0)
				b[cnt++] = a[j];
		if (cnt < 4) continue;
		dfs (i+1, step+1, mul, b, cnt);
	}
}

int a[M];

int main()
{
	int i, j, t, cc = 0;
	for (k = 0, i = 2; i < M; i++)
	{
		if (!vis[i])
		{
			p[k++] = i;
			for (j = i << 1; j < M; j+=i)
				if (!vis[j]) vis[j] = true;
		}
	}
	for (i = 4; i < M; i++)
		C4[i] = C (i, 4);
	/*cout << k << endl;
	for (i = 0; i < 100; i++)
		cout << p[i] << endl;*/
	scanf ("%d", &t);
	while (t--)
	{
		scanf ("%d", &n);
		for (i = 0; i < n; i++)
			scanf ("%d", a+i);
		sort (a, a+n);
		ans = 0;
		dfs (0, 1, 1, a, n);
		printf ("Case %d: %lld\n", ++cc, ans);
	}
	return 0;
}