差分约束，s是一个整体，所有的s是有联系的。
//所以构图时候，绝对得添加它们间的联系

求最少 ----> 求最长路
构造 ：s[a] - s[b] >= c     ....系列
构图时 链接a -> b 权为 c 。dis 初始化0；求最长路， dis[st] = 最终结果。
黑书：连接b -> a 权为 c.dis初始化为0；求最长路，dis为每个任务的初始化。

求最多 ----> 求最短路
构造 : s[a] - s[b] <= c      ....系列
构图时 连接 b ->a 权为c .   dis初始化inf,dis[st] = 0,求最短路. dis[ed] = 得到结果。



若有包括第一个顶点的全 [a,b]区间,则应该说有的后置顶点+1,变区间为[a,b)。
将所有的> , < 化为  >=  或者 <= .
求最长路 ，将所有的差分方程式 化成 >= 形式，然后套用一下spfa bellmanford等就可以了。
求最短路 ，将所有的差分方程 化成 <= 形式，然后套用一下spfa bellmanford等就可以了。

最后总结：

求最少 ----> 求最长路
构造 ：s[a] - s[b] >= c     ....系列
连接b -> a 权为 c.dis初始化为0；求最长路，dis为每个任务的初始化。dis[ed]为任务节点。


求最多 ----> 求最短路
构造 : s[a] - s[b] <= c      ....系列
构图时 连接 b ->a 权为c .   dis初始化inf,dis[st] = 0,求最短路. dis[ed] = 得到结果。

最后还是确认用黑书中的方法比较好。